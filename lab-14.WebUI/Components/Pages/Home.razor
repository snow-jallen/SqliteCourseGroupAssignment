@page "/"
@inject ILogger<Home> logger

<PageTitle>Home</PageTitle>

<h1>Found @courses.Count courses</h1>
@foreach(var course in courses)
{
    <ViewCourse Course="course" />
}


@if (newCourseVisible)
{
    <NewCourse CourseAdded="courseAdded" />
}
else
{
    <button @onclick="() => newCourseVisible = !newCourseVisible">Add New Course</button>
}

@code {
    bool newCourseVisible = false;
    void courseAdded()
    {
        logger.LogInformation("course added. Hiding new course form.");
        newCourseVisible = false;
    }

    List<Course> courses = new();
    protected override void OnInitialized()
    {
        logger.LogInformation("Subscribing to the CourseAdded event");
        CourseLogic.Instance.CourseAdded += () =>
        {
            logger.LogInformation("CourseAdded event received");
            refresh();
        };
        refresh();
    }

    void refresh()
    {
        InvokeAsync(() =>
        {
            logger.LogInformation("refreshing course list");
            courses = new(CourseLogic.Instance.GetCourses());
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        logger.LogInformation("Unsubscribing from the CourseAdded event");
        CourseLogic.Instance.CourseAdded -= refresh;
    }
}